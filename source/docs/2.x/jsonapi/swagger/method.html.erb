<h1>TITLE</h1>

<h2>Description</h2>
<p><%= @operation.description %></p>

<h2>Parameters</h2>
<%- parameters = @operation.parameters %>

<table>
<thead>
<td>Name</td>
<td>In</td>
<td>Required?</td>
<td>Description</td>
</thead>

<tbody>
<% parameters.each do |parameter| %>
<tr>
<td><%= parameter.name %></td>
<td><%= parameter.in   %></td>
<td><%= parameter.required.is_a?(TrueClass) ? 'yes' : 'no' %></td>
<td><%= parameter.description %></td>
</tr>
<% end %>
</tbody>
</table>

<h2>EXAMPLES</h2>

<% consumes = @operation.consumes %>
<% unless consumes.nil? || consumes.empty? %>
<h2>Accepted MIME Types</h2>

<table>
<thead>
<td>Type</td>
</thead>

<tbody>
<% consumes.each do |consume| %>
<tr>
<td><%= consume %></td>
</tr>
<% end %>
</tbody>
</table>

<% end %>


<% schema_params = @operation.parameters.select {|param| 'body'.eql?(param.in) && 'data'.eql?(param.name) } %>
<% unless schema_params.empty? %>

<h2>Accepted Data Schema</h2>

<% schema_params.each do |schema_param| %>

<%# TODO different behaviour if schema is an array %>

<% end %>
<% end %>

<h2>HTTP Return Codes</h2>

<% produces = @operation.produces %>
<% unless produces.nil? || produces.empty? %>

<h2>Returned MIME Types</h2>

<table>
<thead>
<td>Type</td>
</thead>

<tbody>
<% produces.each do |produce| %>
<tr>
<td><%= produce %></td>
</tr>
<% end %>
</tbody>
</table>

<% end %>

<% unless (@operation.responses.keys & ['200', '201']).empty? %>
<h2>Returned Data Schema</h2>
<% end %>

<%# Need to resolve schema definitions from elsewhere in the structure %>