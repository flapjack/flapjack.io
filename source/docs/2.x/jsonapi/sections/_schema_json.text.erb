{
<% definition.properties.keys.sort.each_with_index do |property_name, idx| -%>
  <% property = definition.properties[property_name] -%>
<%= " " * (level * 2) -%>"<%= property_name -%>": <% if 'array'.eql?(property.type) -%><% defin_name = property['items']['$ref'].sub(%r{^#/definitions/}, '') -%><% defin = definitions[defin_name] -%>[<%= partial('sections/schema_json', :locals => {
  :definitions => definitions,
  :definition => defin,
  :level => level + 1
}) %>]<% elsif property.has_key?('$ref') -%><% defin_name = property['$ref'].sub(%r{^#/definitions/}, '') -%><% defin = definitions[defin_name] -%><%= partial('sections/schema_json', :locals => {
  :definitions => definitions,
  :definition => defin,
  :level => level + 1
}) -%>
  <% else -%>
    <%
    value = case property_name
    when 'id'
      '"[String(uuid)]"'
    when 'type'
      if property.key?(:enum)
        types = property.enum
        if types.size == 1
          "\"#{types.first}\""
        else
          "\"[#{types.join('|')}]\""
        end
      end
    else
      case property.type
      when "string"
        if property.key?(:format)
          case property[:format]
          when 'date-time'
            '"[String(date-time)]"'
          else
            '"[String]"'
          end
        else
          '"[String]"'
        end
      when "integer"
        '1'
      else
        property.type
      end
    end -%>
<%= value -%>
  <% end -%>
<%= (idx < (definition.properties.size - 1)) ? "," : "" %>
<% end -%>
<%= " " * ((level - 1) * 2) %>}